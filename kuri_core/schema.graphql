type CoordinatorSet @entity(immutable: true) {
  id: Bytes!
  vrfCoordinator: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type KuriInitFailed @entity(immutable: true) {
  id: Bytes!
  creator: Bytes! # address
  kuriAmount: BigInt! # uint64
  totalParticipantsCount: Int! # uint16
  state: Int! # uint8
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type KuriInitialised @entity(immutable: true) {
  id: Bytes!
  _kuriData_creator: Bytes! # address
  _kuriData_kuriAmount: BigInt! # uint64
  _kuriData_totalParticipantsCount: Int! # uint16
  _kuriData_totalActiveParticipantsCount: Int! # uint16
  _kuriData_intervalDuration: Int! # uint24
  _kuriData_nexRaffleTime: BigInt! # uint48
  _kuriData_nextIntervalDepositTime: BigInt! # uint48
  _kuriData_launchPeriod: BigInt! # uint48
  _kuriData_startTime: BigInt! # uint48
  _kuriData_endTime: BigInt! # uint48
  _kuriData_intervalType: Int! # uint8
  _kuriData_state: Int! # uint8
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type KuriSlotClaimed @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  timestamp: BigInt! # uint64
  kuriAmount: BigInt! # uint64
  intervalIndex: Int! # uint16
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MembershipRequested @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  timestamp: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferRequested @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RaffleWinnerSelected @entity(immutable: true) {
  id: Bytes!
  intervalIndex: Int! # uint16
  winnerIndex: Int! # uint16
  winnerAddress: Bytes! # address
  winnerTimestamp: BigInt! # uint48
  requestId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RoleAdminChanged @entity(immutable: true) {
  id: Bytes!
  role: Bytes! # bytes32
  previousAdminRole: Bytes! # bytes32
  newAdminRole: Bytes! # bytes32
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RoleGranted @entity(immutable: true) {
  id: Bytes!
  role: Bytes! # bytes32
  account: Bytes! # address
  sender: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type RoleRevoked @entity(immutable: true) {
  id: Bytes!
  role: Bytes! # bytes32
  account: Bytes! # address
  sender: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UserAccepted @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  caller: Bytes! # address
  _totalActiveParticipantsCount: Int! # uint16
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UserDeposited @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  userIndex: BigInt! # uint256
  intervalIndex: BigInt! # uint256
  amountDeposited: BigInt! # uint64
  depositTimestamp: BigInt! # uint48
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UserFlagged @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  intervalIndex: Int! # uint16
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type UserRejected @entity(immutable: true) {
  id: Bytes!
  user: Bytes! # address
  caller: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
